<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Esquel.BaseManager</name>
    </assembly>
    <members>
        <member name="T:Esquel.BaseManager.FilesManager">
            <summary>
            文件夹操作类
            </summary>
        </member>
        <member name="P:Esquel.BaseManager.FilesManager.GetAssemblyPath">
            <summary>
            获取所在当前文件夹路径
            </summary>
        </member>
        <member name="M:Esquel.BaseManager.FilesManager.SetRichText(System.Windows.Forms.RichTextBox,System.String,System.Int32)">
            <summary>
            将日志入写到RichText中
            </summary>
            <param name="rtx"></param>
            <param name="text"></param>
            <param name="rowImportNum">总行数</param>
        </member>
        <member name="M:Esquel.BaseManager.FilesManager.GetConnectionStr(System.String)">
            <summary>
            获取SQL连接字符串
            </summary>
            <param name="appSettingKey">Key</param>
            <returns></returns>
        </member>
        <member name="P:Esquel.BaseManager.FilesManager.ConnectionString">
            <summary>
            获取默认连接SQL字符串
            </summary>
        </member>
        <member name="M:Esquel.BaseManager.FilesManager.GetPrivateProfileString(System.String,System.String,System.String,System.String)">
            <summary>
            读取配置文件指定的值
            </summary>
            <param name="Configfile">配置文件的全路径文件名</param>
            <param name="Section">段名</param>
            <param name="Key">项名</param>
            <param name="def">为空的默认值</param>
            <returns>字符串值</returns>
        </member>
        <member name="M:Esquel.BaseManager.FilesManager.WritePrivateProfilestring(System.String,System.String,System.String,System.String)">
            <summary>
            完蛋配置文件的值
            </summary>
            <param name="Configfile">配置文件名</param>
            <param name="section">段名</param>
            <param name="key">项名</param>
            <param name="value">指定的项值</param>
            <returns>是否写成功</returns>
        </member>
        <member name="M:Esquel.BaseManager.FilesManager.Exists(System.String)">
            <summary>
            确定指定的文件是否存在.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.FilesManager.UpdateConfig(System.String,System.String,System.String)">
            <summary>
            修改当前应用程序下的config文件
            </summary>
            <param name="Key"></param>
            <param name="Value"></param>
        </member>
        <member name="M:Esquel.BaseManager.FilesManager.ReadConfig(System.String,System.String)">
            <summary>
            读取Config文件
            </summary>
            <param name="Key"></param>
            <param name="strFileName"></param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.FilesManager.CopyDirectory(System.String,System.String)">
            <summary>
            复制文件夹及其子文件
            </summary>
            <param name="DirectoryPath">源目录</param>
            <param name="DirAddress">目标目录</param>
        </member>
        <member name="M:Esquel.BaseManager.FilesManager.CopyDirectory(System.String,System.String,System.Boolean)">
            <summary>
            复制文件夹及其子文件
            </summary>
            <param name="DirectoryPath">源目录</param>
            <param name="DirAddress">目标目录</param>
            <param name="isIncludeFile">true 包含文件夹时将作为其只子文件夹添加,false 直接将文件写到目标文件夹下</param>
        </member>
        <member name="P:Esquel.BaseManager.FilesManager.GetExecFilePath">
            <summary>
            获取文件的位置
            </summary>
        </member>
        <member name="M:Esquel.BaseManager.FilesManager.WriteOperate(System.String,System.String,System.String)">
            <summary>
            写系统日志文件Txt
            </summary>
            <param name="LogsRootPath"></param>
            <param name="fileName"></param>
            <param name="Content"></param>
        </member>
        <member name="M:Esquel.BaseManager.FilesManager.CheckFileIsOpen(System.String)">
            <summary>
            检测文件是否已经打开
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.FilesManager.CheckFileProcessIsOen(System.String)">
            <summary>
            判断文件是否已经在进程中存在
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.FilesManager.WriteOperateLog(System.String,System.String,System.String,System.Boolean)">
            <summary>
            写系统日志文件Txt
            </summary>
            <param name="LogsRootPath"></param>
            <param name="Title"></param>
            <param name="Content"></param>
        </member>
        <member name="M:Esquel.BaseManager.FilesManager.WriteOperateLog(System.String)">
            <summary>
            写系统日志文件Txt
            </summary>
            <param name="Content">内容</param>
        </member>
        <member name="M:Esquel.BaseManager.FilesManager.WriteLog(System.String,System.String)">
            <summary>
            写日志文件
            </summary>
            <param name="Title"></param>
            <param name="Content"></param>
        </member>
        <member name="M:Esquel.BaseManager.FilesManager.MessageBoxShow(System.String,System.String)">
            <summary>
            系统提示框
            </summary>
            <param name="errMsg"></param>
            <param name="tip"></param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.FilesManager.MessageBoxShow(System.String)">
            <summary>
            系统提示框
            </summary>
            <param name="errMsg"></param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.FilesManager.IsMatch(System.String,System.String)">
            <summary>
            正则表达式判断
            </summary>
            <param name="str">判断的字符串</param>
            <param name="regex">正则表达试</param>
            <returns>T:成功;F:失败</returns>
        </member>
        <member name="M:Esquel.BaseManager.FilesManager.ReadFile(System.String)">
            <summary>
            读取前文件内容
            </summary>
            <param name="srReader"></param>
            <param name="strFile"></param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.FilesManager.WriteFile(System.String,System.Text.StringBuilder,System.Boolean)">
            <summary>
            写文件
            </summary>
            <param name="filePath">文件路径及名称</param>
            <param name="sbEncryptContent">类型</param>
            <param name="append">是否追加</param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.FilesManager.WriteFile(System.String,System.Text.StringBuilder)">
            <summary>
            写文件
            </summary>
            <param name="filePath">文件路径及名称</param>
            <param name="sbEncryptContent">文件内容</param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.FilesManager.BinarySerialize(System.Object)">
            <summary>
            序列化object
            </summary>
            <param name="Nobj">要序列化object</param>
            <returns>序列化object得到的字符串</returns>
        </member>
        <member name="M:Esquel.BaseManager.FilesManager.DeSerialize(System.String)">
            <summary>
            反序列化object
            </summary>
            <param name="str">经过序列化的字符串</param>
            <returns>反序列化的对象</returns>
        </member>
        <member name="M:Esquel.BaseManager.FilesManager.GetWeekOfYear(System.DateTime)">
            <summary>
            获取当前时间周次
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="F:Esquel.BaseManager.Consts.APPSETTINGSCONNECTIONSTRING">
            <summary>
            App配置文件中的默认连接串中的KEY
            </summary>
        </member>
        <member name="T:Esquel.BaseManager.FastPropertyComparer`1">
            <summary>
            数据去重
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Esquel.BaseManager.FastPropertyComparer`1.#ctor(System.String)">
            <summary>
            通过propertyName 获取PropertyInfo对象
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="T:Esquel.BaseManager.CHConvertPY">
            <summary>
            拼音中文互转
            </summary>
        </member>
        <member name="F:Esquel.BaseManager.CHConvertPY.pyValue">
            <summary>
             包含字符 ASC 码的整形数组。
            </summary>
        </member>
        <member name="F:Esquel.BaseManager.CHConvertPY.pyName">
            <summary>
            包含汉字拼音的字符串数组
            </summary>
        </member>
        <member name="M:Esquel.BaseManager.CHConvertPY.PinYinConvert(System.String)">
            <summary>
            把汉字转换成拼音(全拼)
            </summary>
            <param name="hzString">汉字字符串</param>
            <returns>转换后的拼音(全拼)字符串</returns>
        </member>
        <member name="M:Esquel.BaseManager.CHConvertPY.PinYinHeadCovnert(System.String)">
            <summary>xxx
            返回汉字字符串的拼音的首字母
            </summary>
            <param name="chinesestr">要转换的字符串</param>
            <returns></returns>
        </member>
        <member name="F:Esquel.BaseManager.CHConvertPY.Fun">
            <summary>
            函數SQL
            </summary>
        </member>
        <member name="T:Esquel.BaseManager.CompilerCSharp">
            <summary>
            动态编译CS类
            </summary>
        </member>
        <member name="M:Esquel.BaseManager.CompilerCSharp.GetCompilerResults(System.String@,System.String[],System.Collections.Generic.List{System.String},System.String)">
            <summary>
            生成C#编译类
            </summary>
            <param name="errMsg">编译错误信息</param>
            <param name="coding">代码</param>
            <param name="lstRefDll">引用文件</param>
            <param name="vers">编译器版本</param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.CompilerCSharp.ExecInvoke(System.String@,System.CodeDom.Compiler.CompilerResults,System.String,System.String,System.Object[])">
            <summary>
            执行方法
            </summary>
            <param name="errMsg">执行错误信息</param>
            <param name="cr">编译对象</param>
            <param name="className">命名空间+类名</param>
            <param name="methodName">执行的方法</param>
            <param name="arrObj">参数</param>
            <returns></returns>
        </member>
        <member name="T:Esquel.BaseManager.DESEncrypt">
            <summary>
            加密与解密
            </summary>
        </member>
        <member name="M:Esquel.BaseManager.DESEncrypt.#ctor">
            <summary>
            DES加密与解密
            </summary>
        </member>
        <member name="M:Esquel.BaseManager.DESEncrypt.EncryptDES(System.String,System.String)">
            <summary>
            对字符串进行DES加密
            </summary>
            <param name="sourceString">待加密的字符串</param>
            <returns>加密后的BASE64编码的字符串</returns>
        </member>
        <member name="M:Esquel.BaseManager.DESEncrypt.DecryptDES(System.String,System.String)">
            <summary>
            解密
            </summary>
            <param name="pToDecrypt">要解密的以Base64</param>
            <param name="sKey">密钥，且必须为8位</param>
            <returns>已解密的字符串</returns>
        </member>
        <member name="M:Esquel.BaseManager.DESEncrypt.EncryptPassWord(System.String)">
            <summary>
            MD5将字符串加密
            </summary>
            <param name="sourceString">需要加密的字符串</param>
            <returns>MD5加密后字符串</returns>
        </member>
        <member name="M:Esquel.BaseManager.DESEncrypt.HashString(System.String,System.String)">
            <summary>
            字符串MD5加密
            </summary>
            <param name="codeName">编码类型</param>
            <param name="sourceString">需要加密的字符串</param>
            <returns>MD5加密后字符串</returns>
        </member>
        <member name="M:Esquel.BaseManager.DESEncrypt.ToBase64String(System.String)">
            <summary>
            64位字符串加密
            </summary>
            <param name="originalString">加密字符串</param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.DESEncrypt.FromBase64String(System.String)">
            <summary>
            64位字符串解密
            </summary>
            <param name="encodedString">解密字符串</param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.DESEncrypt.Encrypt(System.String)">
            <summary>
            加密
            </summary>
            <param name="Text"></param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.DESEncrypt.Encrypt(System.String,System.String)">
            <summary> 
            加密数据 
            </summary> 
            <param name="Text"></param> 
            <param name="sKey"></param> 
            <returns></returns> 
        </member>
        <member name="M:Esquel.BaseManager.DESEncrypt.Decrypt(System.String)">
            <summary>
            解密
            </summary>
            <param name="Text"></param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.DESEncrypt.Decrypt(System.String,System.String)">
            <summary> 
            解密数据 
            </summary> 
            <param name="Text"></param> 
            <param name="sKey"></param> 
            <returns></returns> 
        </member>
        <member name="M:Esquel.BaseManager.DESEncrypt.EncryPass(System.String)">
            <summary>
            公司考勤加密
            </summary>
            <param name="strPassWord"></param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.DESEncrypt.DecryPass(System.String)">
            <summary>
            公司考勤解密
            </summary>
            <param name="strPassWord"></param>
            <returns></returns>
        </member>
        <member name="T:Esquel.BaseManager.Enums">
            <summary>
            枚举审核
            </summary>
        </member>
        <member name="M:Esquel.BaseManager.Enums.EnumberHelper.EnumToList``1">
            <summary>
            获取枚举集合的内容
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="P:Esquel.BaseManager.Enums.EnumberEntity.Desction">
            <summary>  
            枚举的描述  
            </summary>  
        </member>
        <member name="P:Esquel.BaseManager.Enums.EnumberEntity.EnumName">
            <summary>  
            枚举名称  
            </summary>  
        </member>
        <member name="P:Esquel.BaseManager.Enums.EnumberEntity.EnumValue">
            <summary>  
            枚举对象的值  
            </summary>  
        </member>
        <member name="P:Esquel.BaseManager.Enums.EnumberEntity.IsCheck">
            <summary>
            是否提示
            </summary>
        </member>
        <member name="P:Esquel.BaseManager.Enums.EnumberEntity.IsSelected">
            <summary>
            是否选择
            </summary>
        </member>
        <member name="P:Esquel.BaseManager.Enums.EnumberEntity.IRI">
            <summary>
            资源标识符+方法名
            </summary>
        </member>
        <member name="P:Esquel.BaseManager.Enums.EnumberEntity.Action">
            <summary>
            执行动作
            </summary>
        </member>
        <member name="P:Esquel.BaseManager.Enums.EnumberEntity.XmlTemplate">
            <summary>
            XML文件模板
            </summary>
        </member>
        <member name="P:Esquel.BaseManager.Enums.EnumberEntity.ImportDll">
            <summary>
            引用DLL
            </summary>
        </member>
        <member name="P:Esquel.BaseManager.Enums.EnumberEntity.ImportAssemblies">
            <summary>
            调用命名空间+类名
            </summary>
        </member>
        <member name="P:Esquel.BaseManager.Enums.EnumberEntity.ImportFunc">
            <summary>
            调用方法名
            </summary>
        </member>
        <member name="P:Esquel.BaseManager.Enums.EnumberEntity.CR">
            <summary>
            编译器对象
            </summary>
        </member>
        <member name="T:Esquel.BaseManager.Enums.ModbusDataFormat">
            <summary>
            MODBUS数据转换格式
            </summary>
        </member>
        <member name="F:Esquel.BaseManager.Enums.ModbusDataFormat.None">
            <summary>
            无类型
            </summary>
        </member>
        <member name="F:Esquel.BaseManager.Enums.ModbusDataFormat.ABCD">
            <summary>
            int\float ABCD
            </summary>
        </member>
        <member name="F:Esquel.BaseManager.Enums.ModbusDataFormat.CDAB">
            <summary>
            int\float CDAB
            </summary>
        </member>
        <member name="F:Esquel.BaseManager.Enums.ModbusDataFormat.BADC">
            <summary>
            int\float BADC
            </summary>
        </member>
        <member name="F:Esquel.BaseManager.Enums.ModbusDataFormat.DCBA">
            <summary>
            int\float DCBA
            </summary>
        </member>
        <member name="F:Esquel.BaseManager.Enums.ModbusDataFormat.ABCDEFGH">
            <summary>
            long double ABCDEFGH
            </summary>
        </member>
        <member name="F:Esquel.BaseManager.Enums.ModbusDataFormat.GHEFCDAB">
            <summary>
            long double GHEFCDAB
            </summary>
        </member>
        <member name="F:Esquel.BaseManager.Enums.ModbusDataFormat.BADCFEHG">
            <summary>
            long double BADCFEHG
            </summary>
        </member>
        <member name="F:Esquel.BaseManager.Enums.ModbusDataFormat.HGFEDCBA">
            <summary>
            long double HGFEDCBA
            </summary>
        </member>
        <member name="T:Esquel.BaseManager.Enums.DataType">
            <summary>
            数据类型
            </summary>
        </member>
        <member name="F:Esquel.BaseManager.Enums.DataType.None">
            <summary>
            无类型
            </summary>
        </member>
        <member name="F:Esquel.BaseManager.Enums.DataType.ushortType">
            <summary>
            无符号16位整形
            </summary>
        </member>
        <member name="F:Esquel.BaseManager.Enums.DataType.shortType">
             <summary>
            有符号16位整形
             </summary>
        </member>
        <member name="F:Esquel.BaseManager.Enums.DataType.uintType">
            <summary>
            无符号32位整形
            </summary>
        </member>
        <member name="F:Esquel.BaseManager.Enums.DataType.intType">
            <summary>
            有符号32位整形
            </summary>
        </member>
        <member name="F:Esquel.BaseManager.Enums.DataType.ulongType">
            <summary>
            无符号64位整形
            </summary>
        </member>
        <member name="F:Esquel.BaseManager.Enums.DataType.longType">
            <summary>
            有符号64位整形
            </summary>
        </member>
        <member name="F:Esquel.BaseManager.Enums.DataType.floatType">
            <summary>
            单精度
            </summary>
        </member>
        <member name="F:Esquel.BaseManager.Enums.DataType.doubleType">
            <summary>
            双精度
            </summary>
        </member>
        <member name="F:Esquel.BaseManager.Enums.DataType.byteType">
            <summary>
            字节
            </summary>
        </member>
        <member name="F:Esquel.BaseManager.Enums.DataType.boolType">
            <summary>
            布尔
            </summary>
        </member>
        <member name="T:Esquel.BaseManager.Enums.EditorStatus">
            <summary>
            编辑状态
            </summary>
        </member>
        <member name="T:Esquel.BaseManager.Enums.CheckedRelation">
            <summary>
            全选/反选/取消选择条件
            </summary>
        </member>
        <member name="T:Esquel.BaseManager.HexEncoding">
            <summary>
            Summary description for HexEncoding.
            </summary>
        </member>
        <member name="M:Esquel.BaseManager.HexEncoding.GetBytes(System.String,System.Int32@)">
            <summary>
            Creates a byte array from the hexadecimal string. Each two characters are combined
            to create one byte. First two hexadecimal characters become first byte in returned array.
            Non-hexadecimal characters are ignored. 
            </summary>
            <param name="hexString">string to convert to byte array</param>
            <param name="discarded">number of characters in string ignored</param>
            <returns>byte array, in the same left-to-right order as the hexString</returns>
        </member>
        <member name="M:Esquel.BaseManager.HexEncoding.InHexFormat(System.String)">
            <summary>
            Determines if given string is in proper hexadecimal string format
            </summary>
            <param name="hexString"></param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.HexEncoding.IsHexDigit(System.Char)">
            <summary>
            Returns true is c is a hexadecimal digit (A-F, a-f, 0-9)
            </summary>
            <param name="c">Character to test</param>
            <returns>true if hex digit, false if not</returns>
        </member>
        <member name="M:Esquel.BaseManager.HexEncoding.HexToByte(System.String)">
            <summary>
            Converts 1 or 2 character string into equivalant byte value
            </summary>
            <param name="hex">1 or 2 character string</param>
            <returns>byte</returns>
        </member>
        <member name="T:Esquel.BaseManager.ImageOperation">
            <summary>
            ImageOption 的摘要说明
            </summary>
        </member>
        <member name="M:Esquel.BaseManager.ImageOperation.CreateRoundedCorner(System.Drawing.Image,Esquel.BaseManager.ImageOperation.RoundRectanglePosition)">
            <summary>
            圆角生成（但是只能是一个角）
            </summary>
            <param name="image">源图片 Image</param>
            <param name="roundCorner">圆角位置</param>
            <returns>处理好的Image</returns>
        </member>
        <member name="T:Esquel.BaseManager.ImageOperation.RoundRectanglePosition">
            <summary>
            目标图片的圆角位置
            </summary>
        </member>
        <member name="F:Esquel.BaseManager.ImageOperation.RoundRectanglePosition.TopLeft">
            <summary>
            左上角
            </summary>
        </member>
        <member name="F:Esquel.BaseManager.ImageOperation.RoundRectanglePosition.TopRight">
            <summary>
            右上角
            </summary>
        </member>
        <member name="F:Esquel.BaseManager.ImageOperation.RoundRectanglePosition.BottomLeft">
            <summary>
            左下角
            </summary>
        </member>
        <member name="F:Esquel.BaseManager.ImageOperation.RoundRectanglePosition.BottomRight">
            <summary>
            右下角
            </summary>
        </member>
        <member name="M:Esquel.BaseManager.ImageOperation.CreateRoundRectanglePath(System.Drawing.Rectangle,System.Int32,Esquel.BaseManager.ImageOperation.RoundRectanglePosition)">
            <summary>
            构建GraphicsPath路径
            </summary>
            <param name="rect"></param>
            <param name="radius"></param>
            <param name="rrPosition">图片圆角位置</param>
            <returns>返回GraphicPath</returns>
        </member>
        <member name="M:Esquel.BaseManager.ImageOperation.ResizeBitmap(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            图片缩放
            </summary>
            <param name="b">源图片Bitmap</param>
            <param name="dstWidth">目标宽度</param>
            <param name="dstHeight">目标高度</param>
            <returns>处理完成的图片 Bitmap</returns>
        </member>
        <member name="M:Esquel.BaseManager.ImageOperation.GetPicture(System.Drawing.Image)">
            <summary>
            根据图片生成二制进
            </summary>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.ImageOperation.SetPicture(System.Byte[])">
            <summary>
            根据二进制生成图片
            </summary>
            <param name="byteArr"></param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.ImageOperation.ResizeImage(System.Drawing.Image,System.Drawing.Size)">
            <summary>
            图片自动缩小(图片按比例自动生成)
            </summary>
            <param name="imgToResize">原始图片</param>
            <param name="size">图片宽度</param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.ImageOperation.ResizeImage(System.Drawing.Image,System.Drawing.Size,System.Boolean)">
            <summary>
            图片自动缩小(图片按比例自动生成)
            </summary>
            <param name="imgToResize">原始图片</param>
            <param name="size">图片宽度</param>
            <param name="isResize">是否自动放缩</param>
            <returns></returns>
        </member>
        <member name="T:Esquel.BaseManager.OSClass">
            <summary>
            操作系统方法
            </summary>
        </member>
        <member name="M:Esquel.BaseManager.OSClass.GetClientIP">
            <summary>
            获取客户端IP地址(Web)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.OSClass.GetLocalIp">
            <summary>
            获取客户端IP c/s
            </summary>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.OSClass.GetOSBit">
            <summary>
            获取操作系统位数（x32/64） 4.5直接用Environment.Is64BitProcess
            </summary>
            <returns>int</returns>
        </member>
        <member name="M:Esquel.BaseManager.OSClass.SyncAdUsers(System.String,System.String,System.String,System.String)">
            <summary>
            获取当前域下面的所有用户  LDAP://esquel.com/DC=gfg1,DC=esquel,DC=com
            </summary>
            <param name="domain">域名:gfg1/eel1</param>
            <param name="company">公司名:esquel</param>
            <param name="postfix">后缀:com/cn</param> 
            <param name="AccountId">NT账号，为空则是所有的账号</param> 
            <returns>返回值示例：返回值json,格式如：{"ADAccount":"LiuJianX","CNName":"Liu, Jian Xiong /GLE/IT","Factory":"GLE","Department":"Information Technology","Title":"System Analyst","TelephoneNumber":"(761)8925,86(773)3609000-ext(8925)","Email":"LiuJianX@esquel.com"}</returns>
        </member>
        <member name="M:Esquel.BaseManager.OSClass.SyncAdUsers(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            获取当前域下面的所有用户  LDAP://esquel.com/DC=gfg1,DC=esquel,DC=com
            </summary>
            <param name="domain">域名:gfg1/eel1</param>
            <param name="company">公司名:esquel</param>
            <param name="postfix">后缀:com/cn</param> 
            <param name="AccountId">NT账号，为空则是所有的账号</param> 
            <returns>返回值示例：返回值json,格式如：{"ADAccount":"LiuJianX","CNName":"Liu, Jian Xiong /GLE/IT","Factory":"GLE","Department":"Information Technology","Title":"System Analyst","TelephoneNumber":"(761)8925,86(773)3609000-ext(8925)","Email":"LiuJianX@esquel.com"}</returns>
        </member>
        <member name="M:Esquel.BaseManager.OSClass.SyncAdUsers(System.String)">
            <summary>
            根据NT账号获取期对应的属性
            </summary>
            <param name="AccountId">NT账号ID</param>
            <returns>返回值json,格式如：{"ADAccount":"LiuJianX","CNName":"Liu, Jian Xiong /GLE/IT","Factory":"GLE","Department":"Information Technology","Title":"System Analyst","TelephoneNumber":"(761)8925,86(773)3609000-ext(8925)","Email":"LiuJianX@esquel.com"}</returns>
        </member>
        <member name="F:Esquel.BaseManager.OSClass.SERVERIP">
            <summary>
            域服务器IP地址
            </summary>
        </member>
        <member name="F:Esquel.BaseManager.OSClass.EELSERVERIP">
            <summary>
            EEL域服务器IP
            </summary>
        </member>
        <member name="M:Esquel.BaseManager.OSClass.SyncAdUsers(System.String,System.String)">
            <summary>
             根据NT账号获取期对应的属性
            </summary>
            <param name="serverIp">域服务器IP</param>
            <param name="AccountId">用户ID</param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.OSClass.ADUserLogin(System.String,System.String,System.String,System.Boolean@)">
            <summary>
            验证域用户名与密码(需要先指定域服务IP地址 SERVERIP )
            </summary>
            <param name="userCode">用户名</param>
            <param name="password">密码</param>
            <param name="finUser"></param>
            <param name="isVerify"></param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.OSClass.ADUserLogin(System.String,System.String,System.String,System.String,System.Boolean@)">
            <summary>
            验证域用户名与密码
            </summary>
            <param name="serverIp">域服务器IP地址</param>
            <param name="userCode">用户名</param>
            <param name="password">密码</param>
            <param name="finUser">查询用户信息</param>
            <param name="isVerify">是否登录成功：true:成功,false:失败</param>
            <returns>查询用户信息</returns>
        </member>
        <member name="M:Esquel.BaseManager.OSClass.ADUserLogin(System.String,System.String,System.String)">
            <summary>
            验证域用户名与密码
            </summary>
            <param name="serverIp">域服务器IP地址</param>
            <param name="userCode">用户名</param>
            <param name="password">密码</param>
            <returns>是否登录成功：true:成功,false:失败</returns>
        </member>
        <member name="M:Esquel.BaseManager.OSClass.ADUserLogin(System.String,System.String)">
            <summary>
            验证域用户名与密码
            </summary>
            <param name="userCode">用户名</param>
            <param name="password">密码</param>
            <returns>true:成功,false:失败</returns>
        </member>
        <member name="M:Esquel.BaseManager.OSClass.ADUserLogin(System.String,System.String,System.String,System.String,System.String,System.Boolean@)">
            <summary>
            验证域用户名与密码
            </summary>
            <param name="domain">域名:gfg1/eel1</param>
            <param name="company">公司名:esquel</param>
            <param name="postfix">后缀:com/cn</param> 
            <param name="userCode">用户名</param>
            <param name="password">用户密码</param>
            <returns>true:成功,false:失败</returns>
        </member>
        <member name="M:Esquel.BaseManager.OSClass.IsAuthenticated(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean@,System.String@)">
            <summary>
            验证域用户名与密码
            </summary>
            <param name="domain">域名:gfg1/eel1</param>
            <param name="company">公司名:esquel</param>
            <param name="postfix">后缀:com/cn</param> 
            <param name="userCode">用户名</param>
            <param name="password">用户密码</param>
            <param name="errMsg">错误信息</param>
            <returns>true:成功,false:失败</returns>
        </member>
        <member name="P:Esquel.BaseManager.OSClass.GetUserName">
            <summary>
            获取NT账号ID
            </summary>
        </member>
        <member name="P:Esquel.BaseManager.OSClass.GetUserDomainName">
            <summary>
            获取NT账号登录所在的域
            </summary>
        </member>
        <member name="P:Esquel.BaseManager.OSClass.GetUserDomainCompanyName">
            <summary>
            获取NT账号所在域的公司名称
            </summary>
        </member>
        <member name="P:Esquel.BaseManager.OSClass.GetUserDomainPostfixName">
            <summary>
            获取NT账号所在域的后缀名,如：com,cn
            </summary>
        </member>
        <member name="T:Esquel.BaseManager.ReflectConvert">
            <summary>
            数据反射类
            </summary>
        </member>
        <member name="M:Esquel.BaseManager.ReflectConvert.ListToTable``1(System.Collections.Generic.List{``0})">
            <summary>
            list转datatable
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.ReflectConvert.IsNullable(System.Type)">
            <summary>
            Determine of specified type is nullable
            </summary>
        </member>
        <member name="M:Esquel.BaseManager.ReflectConvert.GetCoreType(System.Type)">
            <summary>
            Return underlying type if type is Nullable otherwise return the type
            </summary>
        </member>
        <member name="M:Esquel.BaseManager.ReflectConvert.TableToList``1(System.Data.DataTable,System.Boolean)">
            <summary>  
            DataTable转化为List集合  
            </summary>  
            <typeparam name="T">实体对象</typeparam>  
            <param name="dt">datatable表</param>  
            <param name="isStoreDB">是否存入数据库datetime字段，date字段没事，取出不用判断</param>  
            <returns>返回list集合</returns>  
        </member>
        <member name="M:Esquel.BaseManager.ReflectConvert.GetModelValue``1(System.Object,System.String)">
            <summary>
            根据字符串获取Model对应属性的值
            </summary>
            <typeparam name="T">Model</typeparam>
            <param name="model">对象值</param>
            <param name="key">字符串</param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.ReflectConvert.SetModelValue``1(System.Object,System.String,System.Object)">
            <summary>
            根据现有 obj 对 Model 进行赋值
            </summary>
            <typeparam name="T">Model</typeparam>
            <param name="obj">已实例化Model</param>
            <param name="propertyType">赋值属性</param>
            <param name="propertyValue">值</param>
            <returns></returns>
        </member>
        <member name="T:Esquel.BaseManager.RunInstance">
            <summary>
            检测EXE程序是否已在运行
            </summary>
        </member>
        <member name="M:Esquel.BaseManager.RunInstance.ShowWindowAsync(System.IntPtr,System.Int32)">
            <summary>
            与ShowWindow相似，只是这时的ShowWindow命令会投递到指定的窗口，然后进行异步处理。
            这样一来，就可控制从属于另一个进程的窗口的可视情况。
            同时无须担心另一个进程挂起的时候，自己的应用程序也会牵连其中
            </summary>
            <param name="hWnd">窗体handle</param>
            <param name="cmdShow">要设置的窗体状态</param>
            <returns>如窗口之前是可见的，则返回TRUE，否则返回FALSE</returns>
        </member>
        <member name="M:Esquel.BaseManager.RunInstance.SetForegroundWindow(System.IntPtr)">
            <summary>
            将窗口设为系统的前台窗口。这个函数可用于改变用户目前正在操作的应用程序
            </summary>
            <param name="hWnd">窗体handle</param>
            <returns>bool</returns>
        </member>
        <member name="M:Esquel.BaseManager.RunInstance.SendMessage(System.IntPtr,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="Msg"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.RunInstance.SwitchToThisWindow(System.IntPtr,System.Boolean)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="fAltTab"></param>
        </member>
        <member name="M:Esquel.BaseManager.RunInstance.GetLastInputTime">
            <summary>
            获取键盘和鼠标没有操作的时间
            </summary>
            <returns>以后毫秒时间为单位</returns>
        </member>
        <member name="M:Esquel.BaseManager.RunInstance.HandleRunningInstance(System.Diagnostics.Process)">
            <summary>
            设定指定Process为当前进程
            </summary>
            <param name="instance">已经存在的Process</param>
        </member>
        <member name="M:Esquel.BaseManager.RunInstance.RunningInstance(System.String)">
            <summary>
            获取当前已经运行的实例
            </summary>
            <param name="FileName">需要验证的程序集的加载的文件路径</param>
            <returns>先前已经存在的实例</returns>
        </member>
        <member name="M:Esquel.BaseManager.RunInstance.GetInstance(System.String)">
            <summary>
            获取系统中已经存在的包含指定文件名的进程
            </summary>
            <param name="FileName">需要验证的文件名称，可包含路径</param>
            <returns>可能从该文件加载的进程实例</returns>
        </member>
        <member name="T:Esquel.BaseManager.RunInstance.nCmdShow">
            <summary>
            要设置的窗体状态
            </summary>
        </member>
        <member name="F:Esquel.BaseManager.RunInstance.nCmdShow.SW_HIDE">
            <summary>
            隐藏窗口，活动状态给令一个窗口
            </summary>
        </member>
        <member name="F:Esquel.BaseManager.RunInstance.nCmdShow.SW_MINIMIZE">
            <summary>
            最小化窗口，活动状态给令一个窗口
            </summary>
        </member>
        <member name="F:Esquel.BaseManager.RunInstance.nCmdShow.SW_RESTORE">
            <summary>
            用原来的大小和位置显示一个窗口，同时令其进入活动状态
            </summary>
        </member>
        <member name="F:Esquel.BaseManager.RunInstance.nCmdShow.SW_SHOW">
            <summary>
            用当前的大小和位置显示一个窗口，同时令其进入活动状态
            </summary>
        </member>
        <member name="F:Esquel.BaseManager.RunInstance.nCmdShow.SW_SHOWMAXIMIZED">
            <summary>
            最大化窗口，并将其激活
            </summary>
        </member>
        <member name="F:Esquel.BaseManager.RunInstance.nCmdShow.SW_SHOWMINIMIZED">
            <summary>
            最小化窗口，并将其激活
            </summary>
        </member>
        <member name="F:Esquel.BaseManager.RunInstance.nCmdShow.SW_SHOWMINNOACTIVE">
            <summary>
            最小化一个窗口，同时不改变活动窗口
            </summary>
        </member>
        <member name="F:Esquel.BaseManager.RunInstance.nCmdShow.SW_SHOWNA">
            <summary>
            用当前的大小和位置显示一个窗口，不改变活动窗口
            </summary>
        </member>
        <member name="F:Esquel.BaseManager.RunInstance.nCmdShow.SW_SHOWNOACTIVATE">
            <summary>
            用最近的大小和位置显示一个窗口，同时不改变活动窗口
            </summary>
        </member>
        <member name="F:Esquel.BaseManager.RunInstance.nCmdShow.SW_SHOWNORMAL">
            <summary>
            与SW_RESTORE相同
            </summary>
        </member>
        <member name="M:Esquel.BaseManager.RunInstance.ProcessStart(System.String,System.String)">
            <summary>
            或其他程序
            </summary>
            <param name="filePath">文件路径</param>
            <param name="arguments">外发程序参数</param>
            <returns>返回进程ID</returns>
        </member>
        <member name="M:Esquel.BaseManager.RunInstance.SetWindowPos(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32)">
            <summary>
            设置进程ID显示到桌面最前端或取消最前端显示
            </summary>
            <param name="hWnd"></param>
            <param name="hWndInsertAfter"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="cx"></param>
            <param name="cy"></param>
            <param name="uFlags"></param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.HexToString(System.String)">
            <summary>
            将十六进制的字符串转成十进制的字符串
            </summary>
            <param name="strInput"></param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.StringToHex(System.String)">
            <summary>
            字符串为十六进制格式字符串
            </summary>
            <param name="strInput"></param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.FCSCheckout(System.String)">
            <summary>
            FCS检验
            </summary>
            <param name="strInput"></param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.AddCheckout(System.String)">
            <summary>
            累加和校验
            </summary>
            <param name="strInput"></param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.ToModbusCRC16(System.String)">
            <summary>
            将字符串转换ModbusCRC16进制数据转换（从低至高位）
            </summary>
            <param name="s">字符串</param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.ToModbusCRC16(System.String,System.Boolean)">
            <summary>
            将字符串转换ModbusCRC16进制数据转换（从高至低位）
            </summary>
            <param name="s">字符串</param>
            <param name="isReverse">是否从高至低</param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.ToModbusCRC16(System.Byte[])">
            <summary>
            将二进制数组转换ModbusCRC16进制数据转换（从低至高位）
            </summary>
            <param name="data">二进制数组</param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.ToModbusCRC16(System.Byte[],System.Boolean)">
            <summary>
             将二进制数组转换ModbusCRC16进制数据转换（从低至高位）
            </summary>
            <param name="data">二进制数组</param>
            <param name="isReverse">是否从高至低</param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.ByteToHexStr(System.Byte[])">
            <summary>
            将16进制的数组转换成字符串
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.StringToHexByte(System.String)">
            <summary>
            字符串转16进制字符数组
            </summary>
            <param name="hex"></param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.StringToHexByte(System.String,System.Boolean)">
            <summary>
            字符串转16进制字符数组
            </summary>
            <param name="str"></param>
            <param name="isFilterChinese">是否过滤掉中文字符</param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.GetSplitStr(System.String,System.Int32)">
            <summary>
            按指定长度拆分字符串
            </summary>
            <param name="strs"></param>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.StringToHexASCII(System.String)">
            <summary>
            字符串转换成ASCII的16进
            </summary>
            <param name="stringToHex"></param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.InputAppendCRC(System.String)">
            <summary>
            生产CRC校验
            </summary>
            <param name="inputData"></param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.GetFloatToHex(System.String)">
            <summary>
            16进制转换为float 
            </summary>
            <param name="receiveData"></param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.GetAsciiHexToStr(System.String)">
            <summary>
            Ascii16进制转字符
            </summary>
            <param name="hexData"></param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.GetStrToAsciiHex(System.String)">
            <summary>
            字符转换Ascii16进制
            </summary>
            <param name="strData"></param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.DecToBin(System.Int32)">
            <summary>
            十进制转二进制字符串
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.DecToHex(System.Int32)">
            <summary>
            十进制转十六进制字符串
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.BinToDec(System.String)">
            <summary>
            二进制字符串转十进制数
            </summary>
            <param name="bin"></param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.BinToHex(System.String)">
            <summary>
            二进制字符串转十六进制数
            </summary>
            <param name="bin"></param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.HexToBin(System.String)">
            <summary>
            十六进制转二进制字符串
            </summary>
            <param name="hexStr"></param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.HexToDec(System.String)">
            <summary>
            十六进制转十进制数
            </summary>
            <param name="bin"></param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.IsHexadecimal(System.String)">
            <summary>
            判断是否为16进制数据
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.ByteToHexString(System.Byte[])">
            <summary>
            字节数据转化成16进制表示的字符串 ->
            Byte data into a string of 16 binary representations
            </summary>
            <param name="InBytes">字节数组</param>
            <returns>返回的字符串</returns>
            <exception cref="T:System.NullReferenceException"></exception>
            <example>
            <code lang="cs" source="HslCommunication_Net45.Test\Documentation\Samples\BasicFramework\SoftBasicExample.cs" region="ByteToHexStringExample1" title="ByteToHexString示例" />
            </example>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.ByteToHexString(System.Byte[],System.Char)">
            <summary>
            字节数据转化成16进制表示的字符串 ->
            Byte data into a string of 16 binary representations
            </summary>
            <param name="InBytes">字节数组</param>
            <param name="segment">分割符</param>
            <returns>返回的字符串</returns>
            <exception cref="T:System.NullReferenceException"></exception>
            <example>
            <code lang="cs" source="HslCommunication_Net45.Test\Documentation\Samples\BasicFramework\SoftBasicExample.cs" region="ByteToHexStringExample2" title="ByteToHexString示例" />
            </example>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.ByteToHexString(System.String)">
            <summary>
            字符串数据转化成16进制表示的字符串 ->
            String data into a string of 16 binary representations
            </summary>
            <param name="InString">输入的字符串数据</param>
            <returns>返回的字符串</returns>
            <exception cref="T:System.NullReferenceException"></exception>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.HexStringToBytes(System.String)">
            <summary>
            将16进制的字符串转化成Byte数据，将检测每2个字符转化，也就是说，中间可以是任意字符 ->
            Converts a 16-character string into byte data, which will detect every 2 characters converted, that is, the middle can be any character
            </summary>
            <param name="hex">十六进制的字符串，中间可以是任意的分隔符</param>
            <returns>转换后的字节数组</returns>
            <remarks>参数举例：AA 01 34 A8</remarks>
            <example>
            <code lang="cs" source="HslCommunication_Net45.Test\Documentation\Samples\BasicFramework\SoftBasicExample.cs" region="HexStringToBytesExample" title="HexStringToBytes示例" />
            </example>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.BytesReverseByWord(System.Byte[])">
            <summary>
            将byte数组按照双字节进行反转，如果为单数的情况，则自动补齐 ->
            Reverses the byte array by double byte, or if the singular is the case, automatically
            </summary>
            <param name="inBytes">输入的字节信息</param>
            <returns>反转后的数据</returns>
            <example>
            <code lang="cs" source="HslCommunication_Net45.Test\Documentation\Samples\BasicFramework\SoftBasicExample.cs" region="BytesReverseByWord" title="BytesReverseByWord示例" />
            </example>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.BytesToAsciiBytes(System.Byte[])">
            <summary>
            将原始的byte数组转换成ascii格式的byte数组 ->
            Converts the original byte array to an ASCII-formatted byte array
            </summary>
            <param name="inBytes">等待转换的byte数组</param>
            <returns>转换后的数组</returns>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.AsciiBytesToBytes(System.Byte[])">
            <summary>
            将ascii格式的byte数组转换成原始的byte数组 ->
            Converts an ASCII-formatted byte array to the original byte array
            </summary>
            <param name="inBytes">等待转换的byte数组</param>
            <returns>转换后的数组</returns>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.BuildAsciiBytesFrom(System.Byte)">
            <summary>
            从字节构建一个ASCII格式的数据内容
            </summary>
            <param name="value">数据</param>
            <returns>ASCII格式的字节数组</returns>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.BuildAsciiBytesFrom(System.Int16)">
            <summary>
            从short构建一个ASCII格式的数据内容
            </summary>
            <param name="value">数据</param>
            <returns>ASCII格式的字节数组</returns>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.BuildAsciiBytesFrom(System.UInt16)">
            <summary>
            从ushort构建一个ASCII格式的数据内容
            </summary>
            <param name="value">数据</param>
            <returns>ASCII格式的字节数组</returns>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.BuildAsciiBytesFrom(System.Byte[])">
            <summary>
            从字节数组构建一个ASCII格式的数据内容
            </summary>
            <param name="value">字节信息</param>
            <returns>ASCII格式的地址</returns>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.BoolArrayToByte(System.Boolean[])">
            <summary>
            将bool数组转换到byte数组 ->
            Converting a bool array to a byte array
            </summary>
            <param name="array">bool数组</param>
            <returns>转换后的字节数组</returns>
            <example>
            <code lang="cs" source="HslCommunication_Net45.Test\Documentation\Samples\BasicFramework\SoftBasicExample.cs" region="BoolArrayToByte" title="BoolArrayToByte示例" />
            </example>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.ByteToBoolArray(System.Byte[],System.Int32)">
            <summary>
            从Byte数组中提取位数组，length代表位数 ->
            Extracts a bit array from a byte array, length represents the number of digits
            </summary>
            <param name="InBytes">原先的字节数组</param>
            <param name="length">想要转换的长度，如果超出自动会缩小到数组最大长度</param>
            <returns>转换后的bool数组</returns>
            <example>
            <code lang="cs" source="HslCommunication_Net45.Test\Documentation\Samples\BasicFramework\SoftBasicExample.cs" region="ByteToBoolArray" title="ByteToBoolArray示例" />
            </example> 
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.ByteToBoolArray(System.Byte[])">
            <summary>
            从Byte数组中提取所有的位数组 ->
            Extracts a bit array from a byte array, length represents the number of digits
            </summary>
            <param name="InBytes">原先的字节数组</param>
            <returns>转换后的bool数组</returns>
            <example>
            <code lang="cs" source="HslCommunication_Net45.Test\Documentation\Samples\BasicFramework\SoftBasicExample.cs" region="ByteToBoolArray" title="ByteToBoolArray示例" />
            </example> 
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.SpliceTwoByteArray(System.Byte[],System.Byte[])">
            <summary>
            拼接2个字节数组成一个数组 ->
            Splicing 2 bytes to to an array
            </summary>
            <param name="bytes1">数组一</param>
            <param name="bytes2">数组二</param>
            <returns>拼接后的数组</returns>
            <example>
            <code lang="cs" source="HslCommunication_Net45.Test\Documentation\Samples\BasicFramework\SoftBasicExample.cs" region="SpliceTwoByteArray" title="SpliceTwoByteArray示例" />
            </example> 
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.BytesArraySelectBegin(System.Byte[],System.Int32)">
            <summary>
            选择一个byte数组的前面的几个byte数据信息
            </summary>
            <param name="value">原始的数据信息</param>
            <param name="length">数据的长度</param>
            <returns>选择的前面的几个数据信息</returns>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.BytesArrayRemoveBegin(System.Byte[],System.Int32)">
            <summary>
            将一个byte数组的前面指定位数移除，返回新的一个数组 ->
            Removes the preceding specified number of bits in a byte array, returning a new array
            </summary>
            <param name="value">字节数组</param>
            <param name="length">等待移除的长度</param>
            <returns>新的数据</returns>
            <example>
            <code lang="cs" source="HslCommunication_Net45.Test\Documentation\Samples\BasicFramework\SoftBasicExample.cs" region="BytesArrayRemoveBegin" title="BytesArrayRemoveBegin示例" />
            </example> 
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.BytesArrayRemoveLast(System.Byte[],System.Int32)">
            <summary>
            将一个byte数组的后面指定位数移除，返回新的一个数组 ->
            Removes the specified number of digits after a byte array, returning a new array
            </summary>
            <param name="value">字节数组</param>
            <param name="length">等待移除的长度</param>
            <returns>新的数据</returns>
            <example>
            <code lang="cs" source="HslCommunication_Net45.Test\Documentation\Samples\BasicFramework\SoftBasicExample.cs" region="BytesArrayRemoveLast" title="BytesArrayRemoveLast示例" />
            </example> 
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.BytesArrayRemoveDouble(System.Byte[],System.Int32,System.Int32)">
            <summary>
            将一个byte数组的前后移除指定位数，返回新的一个数组 ->
            Removes a byte array before and after the specified number of bits, returning a new array
            </summary>
            <param name="value">字节数组</param>
            <param name="leftLength">前面的位数</param>
            <param name="rightLength">后面的位数</param>
            <returns>新的数据</returns>
            <example>
            <code lang="cs" source="HslCommunication_Net45.Test\Documentation\Samples\BasicFramework\SoftBasicExample.cs" region="BytesArrayRemoveDouble" title="BytesArrayRemoveDouble示例" />
            </example> 
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.GetSizeDescription(System.Int64)">
            <summary>
            从一个字节大小返回带单位的描述
            </summary>
            <param name="size">实际的大小值</param>
            <returns>最终的字符串值</returns>
            <example>
            比如说我们获取了文件的长度，这个长度可以来自于本地，也可以来自于数据库查询
            <code lang="cs" source="HslCommunication_Net45.Test\Documentation\Samples\BasicFramework\SoftBasicExample.cs" region="GetSizeDescriptionExample" title="GetSizeDescription示例" />
            </example>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.GetTimeSpanDescription(System.TimeSpan)">
            <summary>
            从一个时间差返回带单位的描述
            </summary>
            <param name="ts">实际的时间差</param>
            <returns>最终的字符串值</returns>
            <example>
            比如说我们获取了一个时间差信息
            <code lang="cs" source="HslCommunication_Net45.Test\Documentation\Samples\BasicFramework\SoftBasicExample.cs" region="GetTimeSpanDescriptionExample" title="GetTimeSpanDescription示例" />
            </example>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.AddArrayData``1(``0[]@,``0[],System.Int32)">
            <summary>
            一个通用的数组新增个数方法，会自动判断越界情况，越界的情况下，会自动的截断或是填充 -> 
            A common array of new methods, will automatically determine the cross-border situation, in the case of cross-border, will be automatically truncated or filled
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="array">原数据</param>
            <param name="data">等待新增的数据</param>
            <param name="max">原数据的最大值</param>
            <example>
            <code lang="cs" source="HslCommunication_Net45.Test\Documentation\Samples\BasicFramework\SoftBasicExample.cs" region="AddArrayDataExample" title="AddArrayData示例" />
            </example>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.ArrayExpandToLength``1(``0[],System.Int32)">
            <summary>
            将一个数组进行扩充到指定长度，或是缩短到指定长度 ->
            Extend an array to a specified length, or shorten to a specified length or fill
            </summary>
            <typeparam name="T">数组的类型</typeparam>
            <param name="data">原先数据的数据</param>
            <param name="length">新数组的长度</param>
            <returns>新数组长度信息</returns>
            <example>
            <code lang="cs" source="HslCommunication_Net45.Test\Documentation\Samples\BasicFramework\SoftBasicExample.cs" region="ArrayExpandToLengthExample" title="ArrayExpandToLength示例" />
            </example>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.ArrayExpandToLengthEven``1(``0[])">
            <summary>
            将一个数组进行扩充到偶数长度 ->
            Extend an array to even lengths
            </summary>
            <typeparam name="T">数组的类型</typeparam>
            <param name="data">原先数据的数据</param>
            <returns>新数组长度信息</returns>
            <example>
            <code lang="cs" source="HslCommunication_Net45.Test\Documentation\Samples\BasicFramework\SoftBasicExample.cs" region="ArrayExpandToLengthEvenExample" title="ArrayExpandToLengthEven示例" />
            </example>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.ArraySplitByLength``1(``0[],System.Int32)">
            <summary>
            将指定的数据按照指定长度进行分割，例如int[10]，指定长度4，就分割成int[4],int[4],int[2]，然后拼接list
            </summary>
            <typeparam name="T">数组的类型</typeparam>
            <param name="array">等待分割的数组</param>
            <param name="length">指定的长度信息</param>
            <returns>分割后结果内容</returns>
            <example>
            <code lang="cs" source="HslCommunication_Net45.Test\Documentation\Samples\BasicFramework\SoftBasicExample.cs" region="ArraySplitByLengthExample" title="ArraySplitByLength示例" />
            </example>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.SplitIntegerToArray(System.Int32,System.Int32)">
            <summary>
            将整数进行有效的拆分成数组
            </summary>
            <param name="integer">整数信息</param>
            <param name="everyLength">单个的数组长度</param>
            <returns>拆分后的数组长度</returns>
            <example>
            <code lang="cs" source="HslCommunication_Net45.Test\Documentation\Samples\BasicFramework\SoftBasicExample.cs" region="SplitIntegerToArrayExample" title="SplitIntegerToArray示例" />
            </example>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.IsTwoBytesEquel(System.Byte[],System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            判断两个字节的指定部分是否相同 ->
            Determines whether the specified portion of a two-byte is the same
            </summary>
            <param name="b1">第一个字节</param>
            <param name="start1">第一个字节的起始位置</param>
            <param name="b2">第二个字节</param>
            <param name="start2">第二个字节的起始位置</param>
            <param name="length">校验的长度</param>
            <returns>返回是否相等</returns>
            <exception cref="T:System.IndexOutOfRangeException"></exception>
            <example>
            <code lang="cs" source="HslCommunication_Net45.Test\Documentation\Samples\BasicFramework\SoftBasicExample.cs" region="IsTwoBytesEquelExample1" title="IsTwoBytesEquel示例" />
            </example>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.IsTwoBytesEquel(System.Byte[],System.Byte[])">
            <summary>
            判断两个字节的指定部分是否相同 ->
            Determines whether the specified portion of a two-byte is the same
            </summary>
            <param name="b1">第一个字节</param>
            <param name="b2">第二个字节</param>
            <returns>返回是否相等</returns>
            <example>
            <code lang="cs" source="HslCommunication_Net45.Test\Documentation\Samples\BasicFramework\SoftBasicExample.cs" region="IsTwoBytesEquelExample2" title="IsTwoBytesEquel示例" />
            </example>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.IsByteTokenEquel(System.Byte[],System.Guid)">
            <summary>
            判断两个数据的令牌是否相等 ->
            Determines whether the tokens of two data are equal
            </summary>
            <param name="head">字节数据</param>
            <param name="token">GUID数据</param>
            <returns>返回是否相等</returns>
            <example>
            <code lang="cs" source="HslCommunication_Net45.Test\Documentation\Samples\BasicFramework\SoftBasicExample.cs" region="IsTwoTokenEquelExample" title="IsByteTokenEquel示例" />
            </example>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.IsTwoTokenEquel(System.Guid,System.Guid)">
            <summary>
            判断两个数据的令牌是否相等 ->
            Determines whether the tokens of two data are equal
            </summary>
            <param name="token1">第一个令牌</param>
            <param name="token2">第二个令牌</param>
            <returns>返回是否相等</returns>
        </member>
        <member name="M:Esquel.BaseManager.SoftBase.HexConvertToData(System.String@,System.String,Esquel.BaseManager.Enums.DataType,Esquel.BaseManager.Enums.ModbusDataFormat)">
            <summary>
            16进制转换成十进制
            </summary>
            <param name="errMsg">返回错误信息</param>
            <param name="strHex">16进制数据</param>
            <param name="objType">转换数据类型(参数:ushort,short,ulong,long,uint,int,float,double)</param>
            <param name="dataFarmat">数据格式(参数:ABCD,CDAB,BACD,DCBA,ABCDEFGH,GHEFCDAB,BADCFEHG,HGFEDCBA)</param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.TransConvert.CombineByteToFloatFirstHigh(System.Byte[],System.Int32)">
            <summary>
            将4字节数组转换成FLOAT  字节高低排序
            </summary>
            <param name="bHL">字节数组</param>
            <param name="pos">数组索引</param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.TransConvert.CombineByteToFloatFirstLow(System.Byte[],System.Int32)">
            <summary>
            将4字节数组转换成FLOAT  字节高低排序
            </summary>
            <param name="bHL">字节数组</param>
            <param name="pos">数组索引</param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.TransConvert.CombineByteToIntFirstLow(System.Byte[],System.Int32)">
            <summary>
            将4字节数组转换成FLOAT  字节高低排序
            </summary>
            <param name="bHL">字节数组</param>
            <param name="pos">数组索引</param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.TransConvert.BreakStringWithSpace(System.String)">
            <summary>
            将连续的字符串分隔成2个 2个的字符中间加空格
            </summary>
            <param name="s">字符串</param>
            <returns>用空格分好的字符创</returns>
        </member>
        <member name="M:Esquel.BaseManager.TransConvert.CombineByteToUint16(System.Byte,System.Byte)">
            <summary>
            将2字节整合成UINT
            </summary>
            <param name="hi">高字节</param>
            <param name="lo">低字节</param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.TransConvert.CombineByteToUInt32(System.Byte[],System.Int32)">
            <summary>
            在字节数组中 找4个连续的字节整合成UINT32
            </summary>
            <param name="b">字节数组</param>
            <param name="pos">字节数组中的位置</param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.TransConvert.CombineWordStringToUInt32(System.String,System.String)">
            <summary>
            将2个word string 整合成UINT32
            </summary>
            <param name="sHi">高字符串</param>
            <param name="sLow">低字符串</param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.TransConvert.CombineWordToUInt32(System.UInt16,System.UInt16)">
            <summary>
            将2个字组合成UINT32
            </summary>
            <param name="Dw1">高字</param>
            <param name="Dw2">低字</param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.TransConvert.Lrc(System.String)">
            <summary>
            通讯协议LRC
            </summary>
            <param name="sPro"></param>
            <returns></returns>
        </member>
        <member name="M:Esquel.BaseManager.TransConvert.Crc(System.Byte[],System.Int32)">
            <summary>
            modbus Rtu通讯协议
            </summary>
            <param name="bs">字节数组</param>
            <param name="len">长度</param>
            <returns>crc结果</returns>
        </member>
        <member name="M:Esquel.BaseManager.TransConvert.ReadTxt(System.String)">
            <summary>
            读文本文件
            </summary>
            <param name="sFilePath">文件路径</param>
            <returns>读到的字符串</returns>
        </member>
        <member name="M:Esquel.BaseManager.TransConvert.SaveTxt(System.String,System.String)">
            <summary>
            保存文件
            </summary>
            <param name="sPath">文件路径</param>
            <param name="sText">保存内容</param>
            <returns></returns>
        </member>
    </members>
</doc>
